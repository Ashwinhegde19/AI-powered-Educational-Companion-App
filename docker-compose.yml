version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: ai-companion-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ai-educational-companion
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ai-companion-network

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: ai-companion-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - ai-companion-network
    environment:
      QDRANT__STORAGE__PERFORMANCE__OPTIMIZERS__DEFAULT_SEGMENT_NUMBER: 2

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-companion-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/ai-educational-companion?authSource=admin
      QDRANT_URL: http://qdrant:6333
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY}
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_here}
    depends_on:
      - mongodb
      - qdrant
    networks:
      - ai-companion-network
    volumes:
      - ./backend/logs:/app/backend/logs

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: ai-companion-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-companion-network
    command: redis-server --appendonly yes

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: ai-companion-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - ai-companion-network

volumes:
  mongodb_data:
  qdrant_data:
  redis_data:

networks:
  ai-companion-network:
    driver: bridge
